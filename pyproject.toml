[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "fed-vit-autorl"
description = "Federated reinforcement learning framework for Vision Transformer based autonomous vehicles"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Daniel Schmidt", email = "daniel@terragon.ai"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Distributed Computing",
]
requires-python = ">=3.9"
dynamic = ["version"]

dependencies = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "transformers>=4.21.0",
    "numpy>=1.21.0",
    "pillow>=8.3.0",
    "pyyaml>=6.0",
    "tqdm>=4.64.0",
    "tensorboard>=2.10.0",
    "cryptography>=3.4.8",
]

[project.optional-dependencies]
simulation = [
    "carla>=0.9.13",
    "pygame>=2.1.0",
    "opencv-python>=4.6.0",
]
edge = [
    "onnx>=1.12.0",
    "onnxruntime>=1.12.0",
    "tensorrt",
    "pycuda",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-benchmark>=4.0.0",
    "black>=22.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/terragon-labs/fed-vit-autorl"
Documentation = "https://fed-vit-autorl.readthedocs.io"
Repository = "https://github.com/terragon-labs/fed-vit-autorl"
"Bug Tracker" = "https://github.com/terragon-labs/fed-vit-autorl/issues"

[tool.setuptools_scm]
write_to = "fed_vit_autorl/_version.py"

[tool.setuptools.packages.find]
where = ["."]
include = ["fed_vit_autorl*"]
exclude = ["tests*", "configs*", "monitoring*", "*_env*", "publication_materials*", "research_validation_results*", "final_autonomous_sdlc_results*"]

[tool.ruff]
target-version = "py39"
line-length = 88
select = ["E", "F", "I", "N", "W", "UP", "B", "S", "C4"]
ignore = ["E501", "S101"]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_reexport = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--cov=fed_vit_autorl",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]

[tool.coverage.run]
source = ["fed_vit_autorl"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]